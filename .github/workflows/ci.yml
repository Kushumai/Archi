name: CI Build & Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_PREFIX: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready" --health-interval=10s
          --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Inject .env for frontend
        working-directory: ./frontend
        run: echo "${{ secrets.FRONTEND_ENV_FILE }}" > .env
      - name: Install, lint, build, test frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run lint
          npm run build
          npm test
              
      - name: Check files in auth-service
        working-directory: ./auth-service
        run: ls -l
      - name: Inject .env for auth-service
        working-directory: ./auth-service
        run: echo "${{ secrets.AUTH_ENV_FILE }}" > .env
      - name: Install, lint, build, test auth-service
        working-directory: ./auth-service
        run: |
          npm ci
          npm run lint
          npm run build
          npm test

      - name: Check files in user-service
        working-directory: ./user-service
        run: ls -l
      - name: Inject .env for user-service
        working-directory: ./user-service
        run: echo "${{ secrets.USER_ENV_FILE }}" > .env
      - name: Install, lint, build, test user-service
        working-directory: ./user-service
        run: |
          npm ci
          npm run lint
          npm run build
         # npm test // Uncomment if tests are available
              
      - name: Inject .env for document-service
        working-directory: ./document-service
        run: echo "${{ secrets.DOCUMENT_ENV_FILE }}" > .env
      - name: Install, lint, build, test document-service
        working-directory: ./document-service
        run: |
          npm ci
          npm run lint
          npm run build
        #  npm test // Uncomment if tests are available
              
      - name: Inject .env for bff-service
        working-directory: ./bff-service
        run: echo "${{ secrets.BFF_ENV_FILE }}" > .env
      - name: Install, lint, build, test bff-service
        working-directory: ./bff-service
        run: |
          npm ci
          npm run lint
          npm run build
        #  npm test // Uncomment if tests are available

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          docker build -t ghcr.io/${{ github.repository }}/frontend:latest ./frontend
          docker push ghcr.io/${{ github.repository }}/frontend:latest

          docker build -t ghcr.io/${{ github.repository }}/auth-service:latest ./auth-service
          docker push ghcr.io/${{ github.repository }}/auth-service:latest

          docker build -t ghcr.io/${{ github.repository }}/user-service:latest ./user-service
          docker push ghcr.io/${{ github.repository }}/user-service:latest

          docker build -t ghcr.io/${{ github.repository }}/document-service:latest ./document-service
          docker push ghcr.io/${{ github.repository }}/document-service:latest

          docker build -t ghcr.io/${{ github.repository }}/bff-service:latest ./bff-service
          docker push ghcr.io/${{ github.repository }}/bff-service:latest