worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout  65;
    limit_req_zone $binary_remote_addr zone=one:10m rate=12r/s;

    server {
        listen 80;
        server_name monarchipi.duckdns.org localhost 192.168.1.8;
        return 301 https://$host$request_uri;
        client_max_body_size 20M;
        
        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
            allow all;
        }
        
        location / {
            proxy_pass http://archi_frontend:3100;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";

        add_header Access-Control-Allow-Origin https://monarchipi.duckdns.org always;
        add_header Access-Control-Allow-Credentials "true" always;
        }

        location /api/ {
            limit_req zone=one burst=2 nodelay;
            proxy_pass http://archi_bff:3000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header Cookie $http_cookie;

            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # CORS headers
            add_header Access-Control-Allow-Origin https://monarchipi.duckdns.org always;
            add_header Access-Control-Allow-Credentials "true" always;

            # OPTIONS (CORS)
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin https://monarchipi.duckdns.org;
                add_header Access-Control-Allow-Credentials "true";
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT, PATCH";
                add_header Access-Control-Allow-Headers "Authorization,Content-Type,X-Requested-With";
                add_header Content-Length 0;
                add_header Content-Type "text/plain; charset=UTF-8";
                return 204;
            }
        }
    }
    
    server {
        listen 443 ssl;
        server_name monarchipi.duckdns.org;
        client_max_body_size 20M;
            
        ssl_certificate  /etc/letsencrypt/live/monarchipi.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/monarchipi.duckdns.org/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
            
        location / {
            proxy_pass http://archi_frontend:3100;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            add_header Access-Control-Allow-Origin https://monarchipi.duckdns.org always;
            add_header Access-Control-Allow-Credentials "true" always;
        }
    
        location /api/ {
            limit_req zone=one burst=2 nodelay;
            proxy_pass http://archi_bff:3000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Cookie $http_cookie;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
    
            add_header Access-Control-Allow-Origin https://monarchipi.duckdns.org always;
            add_header Access-Control-Allow-Credentials "true" always;
    
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin https://monarchipi.duckdns.org;
                add_header Access-Control-Allow-Credentials "true";
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT";
                add_header Access-Control-Allow-Headers "Authorization,Content-Type";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }
    }
}
